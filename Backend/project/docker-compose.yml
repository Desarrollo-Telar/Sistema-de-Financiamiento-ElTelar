services:
  # Servicio de la base de datos PostgreSQL
  db_p:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

    ports:
      - "5432:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data

    networks:
      - app_fin

  db:
    #image: postgres:latest
    image: mysql
    restart: always
    environment:
      #POSTGRES_DB: databaseElTelar
      #POSTGRES_USER: telar
      #POSTGRES_PASSWORD: mypassword
      - MYSQL_DATABASE=db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_HOST=''
    ports:
      #- "5432:5432"
      - "3306:3306"
    volumes:
      #- postgres_data:/var/lib/postgresql/data
      - /tmp/app/mysqld:/var/run/mysqld
      - my-db:/var/lib/mysql
    networks:
      - app_fin

  # Servicio de almacenamientos de objectos
  #minio:
  #image: "bitnami/minio:latest"
  #ports:
  #- "9000:9000"
  #- "9001:9001"
  #environment:
  #- MINIO_ROOT_USER=choc1403
  #- MINIO_ROOT_PASSWORD=choc1403
  #networks:
  #- app_fin
  #volumes:
  #- minio_data:/data
  # REDIS
  redis:
    image: redis:6
    command: redis-server
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_fin
  # Servicio de la aplicaci√≥n Django
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

      #- MINIO_STORAGE_ENDPOINT=http://minio:9000
      #- MINIO_SERVER_ACCESS_KEY=choc1403
      #- MINIO_SERVER_SECRET_KEY=choc1403

      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=db
      - MYSQL_ROOT_PASSWORD=password
      - REDISCLOUD_URL = redis://default:PTSGV1jP5KdITaOQxjLZotZZyG623CGf@redis-12001.c52.us-east-1-4.ec2.redns.redis-cloud.com:12001
      - REDIS_URL=redis://
      - DJANGO_SETTINGS_MODULE=project.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL = postgres://u6687kmrek5hj:p7e84f83897f50f940f734176c6715488d7b2f4bac5bd2a69be880fa642942fdc@ec2-72-44-53-200.compute-1.amazonaws.com:5432/dnug6voonsn6l
    
    depends_on:
      - db
      - db_p

    networks:
      - app_fin

  celery:
    build: .
    command: celery -A project worker --loglevel=info
    restart: always
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - db_p

    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL = postgres://u6687kmrek5hj:p7e84f83897f50f940f734176c6715488d7b2f4bac5bd2a69be880fa642942fdc@ec2-72-44-53-200.compute-1.amazonaws.com:5432/dnug6voonsn6l
   
    networks:
      - app_fin

  celery-beat:
    build: .
    command: celery -A project beat --loglevel=info
    restart: always
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - db_p
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL = postgres://u6687kmrek5hj:p7e84f83897f50f940f734176c6715488d7b2f4bac5bd2a69be880fa642942fdc@ec2-72-44-53-200.compute-1.amazonaws.com:5432/dnug6voonsn6l
   

    networks:
      - app_fin

  # Servicio de NGINX
  #nginx:
  #image: nginx
  #ports:
  #- "80:80"
  #volumes:
  #- ./nginx.conf:/etc/nginx/nginx.conf
  #depends_on:
  #- web
  #networks:
  #- app_fin

volumes:
  postgres_data:
  my-db:
  redis_data:
  #minio_data:

networks:
  app_fin:
    driver: bridge
